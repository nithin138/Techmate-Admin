{"version":3,"file":"static/js/400.102312d4.chunk.js","mappings":"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","sources":["Components/Pages/MainPages/Reports/components/countCard.jsx","Components/Pages/MainPages/Reports/components/ordertable.jsx","Components/Pages/MainPages/Reports/Reports.jsx","../node_modules/file-saver/src/FileSaver.js"],"sourcesContent":["import React from \"react\";\r\nimport { Card, CardBody, Col, Row } from \"reactstrap\";\r\nimport { H3, H6 } from \"../../../../../AbstractElements\";\r\nimport \"../style.scss\";\r\n\r\n\r\n\r\nfunction ReportsCountCard({ data }) {\r\n    return (\r\n        <div className=\"px-4\">\r\n            {/* {\r\n                activeTab === 'orders' && */}\r\n                <Row className=\"overflow-x-auto flex-wrap\">\r\n                    <Col sm={12} xl={4} md={3}>\r\n                        <Card>\r\n                            <CardBody style={{ padding: \"20px\" }}>\r\n                                <H6 attrH6={{ className: \"fw-bolder d-flex\" }}>\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"me-2\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\">\r\n                                        <path d=\"M16.2227 4.32414C16.2462 4.31038 16.2658 4.29068 16.2794 4.267C16.293 4.24332 16.3002 4.21649 16.3002 4.18918C16.3002 4.16188 16.293 4.13505 16.2794 4.11137C16.2658 4.08769 16.2462 4.06798 16.2227 4.05422L10.2563 0.587816C9.87449 0.366535 9.44106 0.25 8.99981 0.25C8.55855 0.25 8.12512 0.366535 7.74336 0.587816L1.77813 4.05422C1.75454 4.06798 1.73497 4.08769 1.72137 4.11137C1.70777 4.13505 1.70062 4.16188 1.70062 4.18918C1.70062 4.21649 1.70777 4.24332 1.72137 4.267C1.73497 4.29068 1.75454 4.31038 1.77813 4.32414L8.92188 8.52649C8.94591 8.54064 8.97329 8.54811 9.00117 8.54811C9.02906 8.54811 9.05644 8.54064 9.08047 8.52649L16.2227 4.32414Z\" fill=\"#1D2433\" />\r\n                                        <path d=\"M1.10938 5.38703C1.08555 5.37328 1.05851 5.36606 1.031 5.3661C1.00349 5.36614 0.976471 5.37345 0.952688 5.38729C0.928905 5.40112 0.909197 5.42099 0.895556 5.44488C0.881915 5.46878 0.874825 5.49585 0.875003 5.52336V12.3159C0.875593 12.6433 0.961866 12.9648 1.12524 13.2484C1.28862 13.532 1.52341 13.768 1.80625 13.9327L8.14063 17.7308C8.16437 17.7445 8.1913 17.7517 8.21871 17.7517C8.24613 17.7517 8.27306 17.7445 8.29681 17.7308C8.32056 17.7171 8.34029 17.6974 8.35401 17.6737C8.36774 17.65 8.37498 17.623 8.375 17.5956V9.71477C8.37498 9.68737 8.36774 9.66046 8.35403 9.63674C8.34032 9.61301 8.32061 9.59331 8.29688 9.57961L1.10938 5.38703Z\" fill=\"#1D2433\" />\r\n                                        <path d=\"M9.625 9.74211V17.5937C9.62503 17.6211 9.63227 17.648 9.646 17.6717C9.65972 17.6955 9.67945 17.7152 9.7032 17.7289C9.72695 17.7426 9.75388 17.7498 9.78129 17.7498C9.80871 17.7498 9.83564 17.7425 9.85938 17.7288L16.1934 13.9308C16.476 13.7662 16.7107 13.5306 16.8741 13.2474C17.0375 12.9641 17.124 12.643 17.125 12.3159V5.52336C17.1249 5.49598 17.1176 5.46911 17.1039 5.44543C17.0901 5.42175 17.0704 5.40211 17.0466 5.38846C17.0229 5.37481 16.996 5.36764 16.9686 5.36766C16.9412 5.36769 16.9143 5.37491 16.8906 5.3886L9.70313 9.60735C9.67946 9.62101 9.65978 9.64065 9.64608 9.6643C9.63237 9.68795 9.6251 9.71478 9.625 9.74211Z\" fill=\"#1D2433\" />\r\n                                    </svg> Total Subscriptions\r\n                                </H6>\r\n                                <H3 attrH3={{ className: \"mb-0 mt-3 fw-bolder\" }}>\r\n                                    {data?.totalSubscriptions}\r\n                                </H3>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col sm={12} xl={4} md={3}>\r\n                        <Card>\r\n                            <CardBody style={{ padding: \"20px\" }}>\r\n                                <H6 attrH6={{ className: \"fw-bolder d-flex\" }}>\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"me-2\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\">\r\n                                        <path d=\"M16.2227 4.32414C16.2462 4.31038 16.2658 4.29068 16.2794 4.267C16.293 4.24332 16.3002 4.21649 16.3002 4.18918C16.3002 4.16188 16.293 4.13505 16.2794 4.11137C16.2658 4.08769 16.2462 4.06798 16.2227 4.05422L10.2563 0.587816C9.87449 0.366535 9.44106 0.25 8.99981 0.25C8.55855 0.25 8.12512 0.366535 7.74336 0.587816L1.77813 4.05422C1.75454 4.06798 1.73497 4.08769 1.72137 4.11137C1.70777 4.13505 1.70062 4.16188 1.70062 4.18918C1.70062 4.21649 1.70777 4.24332 1.72137 4.267C1.73497 4.29068 1.75454 4.31038 1.77813 4.32414L8.92188 8.52649C8.94591 8.54064 8.97329 8.54811 9.00117 8.54811C9.02906 8.54811 9.05644 8.54064 9.08047 8.52649L16.2227 4.32414Z\" fill=\"#1D2433\" />\r\n                                        <path d=\"M1.10938 5.38703C1.08555 5.37328 1.05851 5.36606 1.031 5.3661C1.00349 5.36614 0.976471 5.37345 0.952688 5.38729C0.928905 5.40112 0.909197 5.42099 0.895556 5.44488C0.881915 5.46878 0.874825 5.49585 0.875003 5.52336V12.3159C0.875593 12.6433 0.961866 12.9648 1.12524 13.2484C1.28862 13.532 1.52341 13.768 1.80625 13.9327L8.14063 17.7308C8.16437 17.7445 8.1913 17.7517 8.21871 17.7517C8.24613 17.7517 8.27306 17.7445 8.29681 17.7308C8.32056 17.7171 8.34029 17.6974 8.35401 17.6737C8.36774 17.65 8.37498 17.623 8.375 17.5956V9.71477C8.37498 9.68737 8.36774 9.66046 8.35403 9.63674C8.34032 9.61301 8.32061 9.59331 8.29688 9.57961L1.10938 5.38703Z\" fill=\"#1D2433\" />\r\n                                        <path d=\"M9.625 9.74211V17.5937C9.62503 17.6211 9.63227 17.648 9.646 17.6717C9.65972 17.6955 9.67945 17.7152 9.7032 17.7289C9.72695 17.7426 9.75388 17.7498 9.78129 17.7498C9.80871 17.7498 9.83564 17.7425 9.85938 17.7288L16.1934 13.9308C16.476 13.7662 16.7107 13.5306 16.8741 13.2474C17.0375 12.9641 17.124 12.643 17.125 12.3159V5.52336C17.1249 5.49598 17.1176 5.46911 17.1039 5.44543C17.0901 5.42175 17.0704 5.40211 17.0466 5.38846C17.0229 5.37481 16.996 5.36764 16.9686 5.36766C16.9412 5.36769 16.9143 5.37491 16.8906 5.3886L9.70313 9.60735C9.67946 9.62101 9.65978 9.64065 9.64608 9.6643C9.63237 9.68795 9.6251 9.71478 9.625 9.74211Z\" fill=\"#1D2433\" />\r\n                                    </svg> Total Received Payments\r\n                                </H6>\r\n                                <H3 attrH3={{ className: \"mb-0 mt-3 fw-bolder\" }}>\r\n                                    ₹ {data?.totalAmount?.toFixed(2) || 0}\r\n                                </H3>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col sm={12} xl={4} md={3} >\r\n                        <Card>\r\n                            <CardBody style={{ padding: \"20px\" }}>\r\n                                <H6 attrH6={{ className: \"fw-bolder d-flex\" }}>\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"me-2\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\">\r\n                                        <path d=\"M16.2227 4.32414C16.2462 4.31038 16.2658 4.29068 16.2794 4.267C16.293 4.24332 16.3002 4.21649 16.3002 4.18918C16.3002 4.16188 16.293 4.13505 16.2794 4.11137C16.2658 4.08769 16.2462 4.06798 16.2227 4.05422L10.2563 0.587816C9.87449 0.366535 9.44106 0.25 8.99981 0.25C8.55855 0.25 8.12512 0.366535 7.74336 0.587816L1.77813 4.05422C1.75454 4.06798 1.73497 4.08769 1.72137 4.11137C1.70777 4.13505 1.70062 4.16188 1.70062 4.18918C1.70062 4.21649 1.70777 4.24332 1.72137 4.267C1.73497 4.29068 1.75454 4.31038 1.77813 4.32414L8.92188 8.52649C8.94591 8.54064 8.97329 8.54811 9.00117 8.54811C9.02906 8.54811 9.05644 8.54064 9.08047 8.52649L16.2227 4.32414Z\" fill=\"#1D2433\" />\r\n                                        <path d=\"M1.10938 5.38703C1.08555 5.37328 1.05851 5.36606 1.031 5.3661C1.00349 5.36614 0.976471 5.37345 0.952688 5.38729C0.928905 5.40112 0.909197 5.42099 0.895556 5.44488C0.881915 5.46878 0.874825 5.49585 0.875003 5.52336V12.3159C0.875593 12.6433 0.961866 12.9648 1.12524 13.2484C1.28862 13.532 1.52341 13.768 1.80625 13.9327L8.14063 17.7308C8.16437 17.7445 8.1913 17.7517 8.21871 17.7517C8.24613 17.7517 8.27306 17.7445 8.29681 17.7308C8.32056 17.7171 8.34029 17.6974 8.35401 17.6737C8.36774 17.65 8.37498 17.623 8.375 17.5956V9.71477C8.37498 9.68737 8.36774 9.66046 8.35403 9.63674C8.34032 9.61301 8.32061 9.59331 8.29688 9.57961L1.10938 5.38703Z\" fill=\"#1D2433\" />\r\n                                        <path d=\"M9.625 9.74211V17.5937C9.62503 17.6211 9.63227 17.648 9.646 17.6717C9.65972 17.6955 9.67945 17.7152 9.7032 17.7289C9.72695 17.7426 9.75388 17.7498 9.78129 17.7498C9.80871 17.7498 9.83564 17.7425 9.85938 17.7288L16.1934 13.9308C16.476 13.7662 16.7107 13.5306 16.8741 13.2474C17.0375 12.9641 17.124 12.643 17.125 12.3159V5.52336C17.1249 5.49598 17.1176 5.46911 17.1039 5.44543C17.0901 5.42175 17.0704 5.40211 17.0466 5.38846C17.0229 5.37481 16.996 5.36764 16.9686 5.36766C16.9412 5.36769 16.9143 5.37491 16.8906 5.3886L9.70313 9.60735C9.67946 9.62101 9.65978 9.64065 9.64608 9.6643C9.63237 9.68795 9.6251 9.71478 9.625 9.74211Z\" fill=\"#1D2433\" />\r\n                                    </svg> Active Subscriptions\r\n                                </H6>\r\n                                <H3 attrH3={{ className: \"mb-0 mt-3 fw-bolder\" }}>\r\n                               {data?.activeSubscriptions}\r\n                                </H3>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                    \r\n                </Row>\r\n           \r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ReportsCountCard;\r\n\r\n    // const categoryIcons = {\r\n    //     Wines: Wines,\r\n    //     Bundles: Bundles,\r\n    //     \"Beer&Ciders\": BeerandCiders,\r\n    //     'Premixed Drinks': Premixed,\r\n    //     \"Snacks & Mixers\": SnacksandMixers,\r\n    //     Spirit: Spirits\r\n    // };\r\n\r\n    // const totalSalesSum = activeTab === \"sells\" && Array.isArray(data) ? data.reduce((acc, el) => acc + (el.totalSales || 0), 0) : 0;\r\n    // const totalItemsSoldSum = activeTab === \"sells\" && Array.isArray(data) ? data.reduce((acc, el) => acc + (el.totalItemsSold || 0), 0) : 0;\r\n /* } */\r\n            /* {\r\n                activeTab === \"sells\" &&\r\n                <Row className='overflow-x-auto flex-wrap'>\r\n                    <Col sm={12} xl={3} md={3} className='card_width'>\r\n                        <Card>\r\n                            <CardBody\r\n                                style={{ padding: '20px' }}\r\n                            >\r\n                                <H6 attrH6={{ className: \"fw-bolder d-flex\" }}>\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"me-2\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\">\r\n                                        <path d=\"M16.2227 4.32414C16.2462 4.31038 16.2658 4.29068 16.2794 4.267C16.293 4.24332 16.3002 4.21649 16.3002 4.18918C16.3002 4.16188 16.293 4.13505 16.2794 4.11137C16.2658 4.08769 16.2462 4.06798 16.2227 4.05422L10.2563 0.587816C9.87449 0.366535 9.44106 0.25 8.99981 0.25C8.55855 0.25 8.12512 0.366535 7.74336 0.587816L1.77813 4.05422C1.75454 4.06798 1.73497 4.08769 1.72137 4.11137C1.70777 4.13505 1.70062 4.16188 1.70062 4.18918C1.70062 4.21649 1.70777 4.24332 1.72137 4.267C1.73497 4.29068 1.75454 4.31038 1.77813 4.32414L8.92188 8.52649C8.94591 8.54064 8.97329 8.54811 9.00117 8.54811C9.02906 8.54811 9.05644 8.54064 9.08047 8.52649L16.2227 4.32414Z\" fill=\"#1D2433\" />\r\n                                        <path d=\"M1.10938 5.38703C1.08555 5.37328 1.05851 5.36606 1.031 5.3661C1.00349 5.36614 0.976471 5.37345 0.952688 5.38729C0.928905 5.40112 0.909197 5.42099 0.895556 5.44488C0.881915 5.46878 0.874825 5.49585 0.875003 5.52336V12.3159C0.875593 12.6433 0.961866 12.9648 1.12524 13.2484C1.28862 13.532 1.52341 13.768 1.80625 13.9327L8.14063 17.7308C8.16437 17.7445 8.1913 17.7517 8.21871 17.7517C8.24613 17.7517 8.27306 17.7445 8.29681 17.7308C8.32056 17.7171 8.34029 17.6974 8.35401 17.6737C8.36774 17.65 8.37498 17.623 8.375 17.5956V9.71477C8.37498 9.68737 8.36774 9.66046 8.35403 9.63674C8.34032 9.61301 8.32061 9.59331 8.29688 9.57961L1.10938 5.38703Z\" fill=\"#1D2433\" />\r\n                                        <path d=\"M9.625 9.74211V17.5937C9.62503 17.6211 9.63227 17.648 9.646 17.6717C9.65972 17.6955 9.67945 17.7152 9.7032 17.7289C9.72695 17.7426 9.75388 17.7498 9.78129 17.7498C9.80871 17.7498 9.83564 17.7425 9.85938 17.7288L16.1934 13.9308C16.476 13.7662 16.7107 13.5306 16.8741 13.2474C17.0375 12.9641 17.124 12.643 17.125 12.3159V5.52336C17.1249 5.49598 17.1176 5.46911 17.1039 5.44543C17.0901 5.42175 17.0704 5.40211 17.0466 5.38846C17.0229 5.37481 16.996 5.36764 16.9686 5.36766C16.9412 5.36769 16.9143 5.37491 16.8906 5.3886L9.70313 9.60735C9.67946 9.62101 9.65978 9.64065 9.64608 9.6643C9.63237 9.68795 9.6251 9.71478 9.625 9.74211Z\" fill=\"#1D2433\" />\r\n                                    </svg> Total\r\n                                    Sells\r\n                                </H6>\r\n                                <H3 attrH3={{ className: 'mb-0 mt-3 fw-bolder d-flex justify-between items-center' }}>\r\n                                    {totalItemsSoldSum}\r\n                                    <span className=\"count_card_amount\">\r\n                                        ${totalSalesSum}\r\n                                    </span>\r\n                                </H3>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                    {\r\n                        data && data.length > 0 &&\r\n                        data.sort((a, b) => {\r\n                            if (a.categoryName < b.categoryName) return -1;\r\n                            if (a.categoryName > b.categoryName) return 1;\r\n                            return 0;\r\n                        })?.map((el) => (\r\n                            <Col sm={12} xl={3} md={3} className='card_width'>\r\n                                <Card>\r\n                                    <CardBody\r\n                                        style={{ padding: '20px' }}\r\n                                    >\r\n                                        <H6 attrH6={{ className: \"fw-bolder d-flex\" }}>\r\n                                        <img src={categoryIcons[el.categoryName]} alt={el.categoryName} className=\"me-2 dark_mode_svg\" width=\"18\" height=\"18\" /> Total {el?.categoryName}\r\n                                        </H6>\r\n                                        <H3 attrH3={{ className: 'mb-0 mt-3 fw-bolder d-flex justify-between items-center' }}>\r\n                                            {el?.totalItemsSold ? el?.totalItemsSold : 0}\r\n                                            <span className=\"count_card_amount\">\r\n                                                ${el?.totalSales}\r\n                                            </span>\r\n                                        </H3>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </Col>\r\n                        ))\r\n                    }\r\n                </Row>\r\n            } */\r\n\r\n\r\n                // --------------------------------------------------------------------------\r\n                /* <Col sm={12} xl={4} md={3} className=\"card_width\">\r\n                        <Card>\r\n                            <CardBody style={{ padding: \"20px\" }}>\r\n                                <H6 attrH6={{ className: \"fw-bolder d-flex\" }}>\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"me-2\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\">\r\n                                        <path d=\"M16.2227 4.32414C16.2462 4.31038 16.2658 4.29068 16.2794 4.267C16.293 4.24332 16.3002 4.21649 16.3002 4.18918C16.3002 4.16188 16.293 4.13505 16.2794 4.11137C16.2658 4.08769 16.2462 4.06798 16.2227 4.05422L10.2563 0.587816C9.87449 0.366535 9.44106 0.25 8.99981 0.25C8.55855 0.25 8.12512 0.366535 7.74336 0.587816L1.77813 4.05422C1.75454 4.06798 1.73497 4.08769 1.72137 4.11137C1.70777 4.13505 1.70062 4.16188 1.70062 4.18918C1.70062 4.21649 1.70777 4.24332 1.72137 4.267C1.73497 4.29068 1.75454 4.31038 1.77813 4.32414L8.92188 8.52649C8.94591 8.54064 8.97329 8.54811 9.00117 8.54811C9.02906 8.54811 9.05644 8.54064 9.08047 8.52649L16.2227 4.32414Z\" fill=\"#1D2433\" />\r\n                                        <path d=\"M1.10938 5.38703C1.08555 5.37328 1.05851 5.36606 1.031 5.3661C1.00349 5.36614 0.976471 5.37345 0.952688 5.38729C0.928905 5.40112 0.909197 5.42099 0.895556 5.44488C0.881915 5.46878 0.874825 5.49585 0.875003 5.52336V12.3159C0.875593 12.6433 0.961866 12.9648 1.12524 13.2484C1.28862 13.532 1.52341 13.768 1.80625 13.9327L8.14063 17.7308C8.16437 17.7445 8.1913 17.7517 8.21871 17.7517C8.24613 17.7517 8.27306 17.7445 8.29681 17.7308C8.32056 17.7171 8.34029 17.6974 8.35401 17.6737C8.36774 17.65 8.37498 17.623 8.375 17.5956V9.71477C8.37498 9.68737 8.36774 9.66046 8.35403 9.63674C8.34032 9.61301 8.32061 9.59331 8.29688 9.57961L1.10938 5.38703Z\" fill=\"#1D2433\" />\r\n                                        <path d=\"M9.625 9.74211V17.5937C9.62503 17.6211 9.63227 17.648 9.646 17.6717C9.65972 17.6955 9.67945 17.7152 9.7032 17.7289C9.72695 17.7426 9.75388 17.7498 9.78129 17.7498C9.80871 17.7498 9.83564 17.7425 9.85938 17.7288L16.1934 13.9308C16.476 13.7662 16.7107 13.5306 16.8741 13.2474C17.0375 12.9641 17.124 12.643 17.125 12.3159V5.52336C17.1249 5.49598 17.1176 5.46911 17.1039 5.44543C17.0901 5.42175 17.0704 5.40211 17.0466 5.38846C17.0229 5.37481 16.996 5.36764 16.9686 5.36766C16.9412 5.36769 16.9143 5.37491 16.8906 5.3886L9.70313 9.60735C9.67946 9.62101 9.65978 9.64065 9.64608 9.6643C9.63237 9.68795 9.6251 9.71478 9.625 9.74211Z\" fill=\"#1D2433\" />\r\n                                    </svg> Total Pending Payments\r\n                                </H6>\r\n                                <H3 attrH3={{ className: \"mb-0 mt-3 fw-bolder\" }}>\r\n                                    ${data?.total_pending_payments?.toFixed(2) || 0}\r\n                                </H3>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col sm={12} xl={4} md={3} className=\"card_width\">\r\n                        <Card>\r\n                            <CardBody style={{ padding: \"20px\" }}>\r\n                                <H6 attrH6={{ className: \"fw-bolder d-flex\" }}>\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"me-2\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\">\r\n                                        <path d=\"M16.2227 4.32414C16.2462 4.31038 16.2658 4.29068 16.2794 4.267C16.293 4.24332 16.3002 4.21649 16.3002 4.18918C16.3002 4.16188 16.293 4.13505 16.2794 4.11137C16.2658 4.08769 16.2462 4.06798 16.2227 4.05422L10.2563 0.587816C9.87449 0.366535 9.44106 0.25 8.99981 0.25C8.55855 0.25 8.12512 0.366535 7.74336 0.587816L1.77813 4.05422C1.75454 4.06798 1.73497 4.08769 1.72137 4.11137C1.70777 4.13505 1.70062 4.16188 1.70062 4.18918C1.70062 4.21649 1.70777 4.24332 1.72137 4.267C1.73497 4.29068 1.75454 4.31038 1.77813 4.32414L8.92188 8.52649C8.94591 8.54064 8.97329 8.54811 9.00117 8.54811C9.02906 8.54811 9.05644 8.54064 9.08047 8.52649L16.2227 4.32414Z\" fill=\"#1D2433\" />\r\n                                        <path d=\"M1.10938 5.38703C1.08555 5.37328 1.05851 5.36606 1.031 5.3661C1.00349 5.36614 0.976471 5.37345 0.952688 5.38729C0.928905 5.40112 0.909197 5.42099 0.895556 5.44488C0.881915 5.46878 0.874825 5.49585 0.875003 5.52336V12.3159C0.875593 12.6433 0.961866 12.9648 1.12524 13.2484C1.28862 13.532 1.52341 13.768 1.80625 13.9327L8.14063 17.7308C8.16437 17.7445 8.1913 17.7517 8.21871 17.7517C8.24613 17.7517 8.27306 17.7445 8.29681 17.7308C8.32056 17.7171 8.34029 17.6974 8.35401 17.6737C8.36774 17.65 8.37498 17.623 8.375 17.5956V9.71477C8.37498 9.68737 8.36774 9.66046 8.35403 9.63674C8.34032 9.61301 8.32061 9.59331 8.29688 9.57961L1.10938 5.38703Z\" fill=\"#1D2433\" />\r\n                                        <path d=\"M9.625 9.74211V17.5937C9.62503 17.6211 9.63227 17.648 9.646 17.6717C9.65972 17.6955 9.67945 17.7152 9.7032 17.7289C9.72695 17.7426 9.75388 17.7498 9.78129 17.7498C9.80871 17.7498 9.83564 17.7425 9.85938 17.7288L16.1934 13.9308C16.476 13.7662 16.7107 13.5306 16.8741 13.2474C17.0375 12.9641 17.124 12.643 17.125 12.3159V5.52336C17.1249 5.49598 17.1176 5.46911 17.1039 5.44543C17.0901 5.42175 17.0704 5.40211 17.0466 5.38846C17.0229 5.37481 16.996 5.36764 16.9686 5.36766C16.9412 5.36769 16.9143 5.37491 16.8906 5.3886L9.70313 9.60735C9.67946 9.62101 9.65978 9.64065 9.64608 9.6643C9.63237 9.68795 9.6251 9.71478 9.625 9.74211Z\" fill=\"#1D2433\" />\r\n                                    </svg> Gross Income\r\n                                </H6>\r\n                                <H3 attrH3={{ className: \"mb-0 mt-3 fw-bolder\" }}>\r\n                                    ${data?.gross_income?.toFixed(2) || 0}\r\n                                </H3>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col sm={12} xl={4} md={3} className=\"card_width\">\r\n                        <Card>\r\n                            <CardBody style={{ padding: \"20px\" }}>\r\n                                <H6 attrH6={{ className: \"fw-bolder d-flex\" }}>\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"me-2\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\">\r\n                                        <path d=\"M16.2227 4.32414C16.2462 4.31038 16.2658 4.29068 16.2794 4.267C16.293 4.24332 16.3002 4.21649 16.3002 4.18918C16.3002 4.16188 16.293 4.13505 16.2794 4.11137C16.2658 4.08769 16.2462 4.06798 16.2227 4.05422L10.2563 0.587816C9.87449 0.366535 9.44106 0.25 8.99981 0.25C8.55855 0.25 8.12512 0.366535 7.74336 0.587816L1.77813 4.05422C1.75454 4.06798 1.73497 4.08769 1.72137 4.11137C1.70777 4.13505 1.70062 4.16188 1.70062 4.18918C1.70062 4.21649 1.70777 4.24332 1.72137 4.267C1.73497 4.29068 1.75454 4.31038 1.77813 4.32414L8.92188 8.52649C8.94591 8.54064 8.97329 8.54811 9.00117 8.54811C9.02906 8.54811 9.05644 8.54064 9.08047 8.52649L16.2227 4.32414Z\" fill=\"#1D2433\" />\r\n                                        <path d=\"M1.10938 5.38703C1.08555 5.37328 1.05851 5.36606 1.031 5.3661C1.00349 5.36614 0.976471 5.37345 0.952688 5.38729C0.928905 5.40112 0.909197 5.42099 0.895556 5.44488C0.881915 5.46878 0.874825 5.49585 0.875003 5.52336V12.3159C0.875593 12.6433 0.961866 12.9648 1.12524 13.2484C1.28862 13.532 1.52341 13.768 1.80625 13.9327L8.14063 17.7308C8.16437 17.7445 8.1913 17.7517 8.21871 17.7517C8.24613 17.7517 8.27306 17.7445 8.29681 17.7308C8.32056 17.7171 8.34029 17.6974 8.35401 17.6737C8.36774 17.65 8.37498 17.623 8.375 17.5956V9.71477C8.37498 9.68737 8.36774 9.66046 8.35403 9.63674C8.34032 9.61301 8.32061 9.59331 8.29688 9.57961L1.10938 5.38703Z\" fill=\"#1D2433\" />\r\n                                        <path d=\"M9.625 9.74211V17.5937C9.62503 17.6211 9.63227 17.648 9.646 17.6717C9.65972 17.6955 9.67945 17.7152 9.7032 17.7289C9.72695 17.7426 9.75388 17.7498 9.78129 17.7498C9.80871 17.7498 9.83564 17.7425 9.85938 17.7288L16.1934 13.9308C16.476 13.7662 16.7107 13.5306 16.8741 13.2474C17.0375 12.9641 17.124 12.643 17.125 12.3159V5.52336C17.1249 5.49598 17.1176 5.46911 17.1039 5.44543C17.0901 5.42175 17.0704 5.40211 17.0466 5.38846C17.0229 5.37481 16.996 5.36764 16.9686 5.36766C16.9412 5.36769 16.9143 5.37491 16.8906 5.3886L9.70313 9.60735C9.67946 9.62101 9.65978 9.64065 9.64608 9.6643C9.63237 9.68795 9.6251 9.71478 9.625 9.74211Z\" fill=\"#1D2433\" />\r\n                                    </svg> Gross Profit Percentage\r\n                                </H6>\r\n                                <H3 attrH3={{ className: \"mb-0 mt-3 fw-bolder\" }}>\r\n                                    {data?.gross_profit_percentage?.toFixed(2) || 0}%\r\n                                </H3>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col> */\r\n                    // import Wines from \"../../../../../assets/images/Wines.svg\";\r\n// import Bundles from \"../../../../../assets/images/Bundles.svg\";\r\n// import BeerandCiders from \"../../../../../assets/images/Beer&Ciders.svg\";\r\n// import Premixed from \"../../../../../assets/images/Premixed.svg\";\r\n// import SnacksandMixers from \"../../../../../assets/images/Snacks&Mixers.svg\";\r\n// import Spirits from \"../../../../../assets/images/Spirits.svg\";","import React, { Fragment, useCallback, useEffect, useRef, useState } from 'react'\r\nimport DataTable from 'react-data-table-component';\r\nimport { H5 } from '../../../../../AbstractElements';\r\nimport { Button, Col, Container, Form, FormGroup, Input, Label, Pagination, PaginationItem, Row } from 'reactstrap';\r\nimport { DropdownItem, DropdownMenu, DropdownToggle, Media, UncontrolledDropdown } from 'reactstrap';\r\nimport {  MoreVertical } from 'react-feather';\r\nimport {  FaDownload, FaRegEye, FaTrashAlt } from 'react-icons/fa';\r\nimport { useNavigate } from 'react-router';\r\nimport moment from 'moment';\r\nimport { debounce } from 'lodash';\r\nimport Loader from '../../../../Loader/Loader';\r\n\r\nconst OrdersTable = ({orderData}) => {\r\n    const navigate = useNavigate();\r\n\r\n    //console.log(orderData)\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [searchText, setSearchText] = useState('');\r\n\r\n    const debouncedSearch = React.useRef(\r\n        debounce(async (searchTerm) => {\r\n            setSearchText(searchTerm);\r\n        }, 300)\r\n    ).current;\r\n\r\n    const handleSearch = (event) => {\r\n        setSearchTerm(event.target.value);\r\n        debouncedSearch(event.target.value);\r\n    };\r\n\r\n    const handleNavigate = (id) => {\r\n        navigate(`/orders/${id}`);\r\n    }\r\n\r\n    // function capitalizeFirstLetter(string) {\r\n    //     return string?.charAt(0)?.toUpperCase() + string.slice(1);\r\n    // }\r\n\r\n    // const filteredData = orderData?.filter(order => {\r\n    //     const address = order?.address;\r\n    //     const addressMatches = (\r\n    //         address?.addressFullName?.toLowerCase().includes(searchTerm?.toLowerCase()) ||\r\n    //         address?.addressPhoneNumber?.includes(searchTerm) ||\r\n    //         address?.addressPincode?.includes(searchTerm) ||\r\n    //         address?.city?.toLowerCase().includes(searchTerm?.toLowerCase()) ||\r\n    //         address?.country?.toLowerCase().includes(searchTerm?.toLowerCase()) ||\r\n    //         address?.houseNo?.toLowerCase().includes(searchTerm?.toLowerCase()) ||\r\n    //         address?.locality?.toLowerCase().includes(searchTerm?.toLowerCase()) ||\r\n    //         address?.roadName?.toLowerCase().includes(searchTerm?.toLowerCase()) ||\r\n    //         address?.state?.toLowerCase().includes(searchTerm?.toLowerCase())\r\n    //     );\r\n\r\n    //     const variantMatches = order?.products?.some(product => {\r\n    //         return (\r\n    //             product?.variant?.variantName?.toLowerCase().includes(searchTerm?.toLowerCase()) ||\r\n    //             product?.variant?.variantCode?.toLowerCase().includes(searchTerm?.toLowerCase())\r\n    //         );\r\n    //     });\r\n\r\n    //     const productMatches = order.products?.some(product => {\r\n    //         if (product?.product) {\r\n    //             return (\r\n    //                 product.product.productName?.toLowerCase().includes(searchTerm?.toLowerCase()) ||\r\n    //                 product.product.description?.toLowerCase().includes(searchTerm?.toLowerCase()) ||\r\n    //                 product.product.brand.brandName?.toLowerCase().includes(searchTerm?.toLowerCase()) ||\r\n    //                 product.product.category.collection_name?.toLowerCase().includes(searchTerm?.toLowerCase()) ||\r\n    //                 product.product.subCategory.collection_id?.toLowerCase().includes(searchTerm?.toLowerCase()) ||\r\n    //                 product.product?.tags?.some(tag => tag?.tag?.toLowerCase().includes(searchTerm?.toLowerCase()))\r\n    //             );\r\n    //         } else {\r\n    //             return false;\r\n    //         }\r\n    //     });\r\n\r\n    //     return addressMatches || variantMatches || productMatches;\r\n    // });\r\n\r\n\r\n    const orderColumns = [\r\n        {\r\n            name: '#ORDER_ID',\r\n            selector: row => row['sequence_number'],\r\n            sortable: true,\r\n            center: true,\r\n            cell: (row) => (\r\n               \r\n                <div className='ellipses_text_1'>{row?._id}</div>\r\n            )\r\n        },\r\n        {\r\n            name: \"CUSTOMER NAME\",\r\n            selector: (row) => row?.userId?.name || \"Unspecified\",\r\n            sortable: true,\r\n            center: true,\r\n            cell: (row) => (\r\n              <div>\r\n                {row?.userId?.name ? row.userId.name : \"Unspecified\"}\r\n              </div>\r\n            ),\r\n          },\r\n          \r\n        {\r\n            name: 'SUBSCRIPTION DATE',\r\n            selector: row => `${row.startDate}`,\r\n            sortable: true,\r\n            center: true,\r\n            cell: (row) => (\r\n                moment(row.startDate).format('DD MMM, YYYY')\r\n            )\r\n        },\r\n        {\r\n            name: 'DURATION',\r\n            selector: row => `${row?.subscriptionPlanId?.duration}`,\r\n            cell: (row) => (\r\n               `${row?.subscriptionPlanId?.duration} months`\r\n            ),\r\n            sortable: true,\r\n            center: true,\r\n        },\r\n        {\r\n            name: 'PLAN NAME',\r\n            selector: row => `${row?.subscriptionPlanId?.name}`,\r\n            cell: (row) => (\r\n                row?.subscriptionPlanId?.name\r\n            ),\r\n            sortable: true,\r\n            center: true,\r\n        },\r\n        // {\r\n        //     name: 'PAYMENT DETAILS',\r\n        //     selector: row => `${row.payment_method}`,\r\n        //     cell: (row) => (\r\n        //         row.payment_method\r\n        //     ),\r\n        //     sortable: true,\r\n        //     center: true,\r\n        // },\r\n        {\r\n            name: 'PRICE',\r\n            selector: row => `${row?.subscriptionPlanId?.price}`,\r\n            cell: (row) => (\r\n                ` ₹ ${row?.subscriptionPlanId?.price}`\r\n            ),\r\n            sortable: true,\r\n            center: true,\r\n        },\r\n        {\r\n            name: 'STATUS',\r\n            selector: row => `${row?.status}`,\r\n            cell: (row) => (\r\n                row?.status\r\n            ),\r\n            sortable: true,\r\n            center: true,\r\n        },\r\n        \r\n    ];\r\n\r\n    return (\r\n        <Fragment>\r\n            <Row xxl={12}>\r\n                <Row>\r\n                    <Col md={12} lg={12} xl={12} xxl={12}>\r\n                        <div className=\"file-content align-items-center justify-content-between mb-3\">\r\n                            <H5 attrH5={{ className: 'mb-0 font-semibold' }}>Orders</H5>\r\n                            <div className='d-flex'>\r\n                                <div className='mb-0 form-group position-relative search_outer d-flex align-items-center'>\r\n                                    <i className='fa fa-search'></i>\r\n                                    <input className='form-control border-0' value={searchTerm} onChange={(e) => handleSearch(e)} type='text' placeholder='Search...' />\r\n                                </div>\r\n                                {/* <Input type='select' className='ms-3 sortBy' name='subCategory' >\r\n                                    <option>Sort By</option>\r\n                                </Input> */}\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Row>\r\n\r\n            <DataTable\r\n                data={orderData}\r\n                columns={orderColumns}\r\n                // pagination\r\n                progressPending={isLoading}\r\n                progressComponent={<Loader />}\r\n            />\r\n\r\n\r\n        </Fragment>\r\n    )\r\n}\r\nexport default OrdersTable","import React, { Fragment, Suspense, lazy, useContext, useEffect, useState } from 'react';\r\nimport { Container, Row, Col, Nav, NavItem, NavLink, Card, CardBody, Button, Input } from 'reactstrap';\r\nimport { H3 } from '../../../../AbstractElements';\r\nimport ReportsCountCard from './components/countCard';\r\nimport OrdersTable from './components/ordertable';\r\nimport DatePicker from 'react-datepicker';\r\nimport { baseURL, orderURL } from '../../../../Services/api/baseURL';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport exportToExcel from './components/exportToExcel';\r\nimport SellsTable from './components/sellsTable';\r\n\r\nfunction ReportsComponent() {\r\n    const [activeTab, setActiveTab] = useState('orders');\r\n    const [filterDateTab, setFilterDateTab] = useState(1);\r\n    const [startDate, setStartDate] = useState(null);\r\n    const [endDate, setEndDate] = useState(null);\r\n    const [storeData, setStoreData] = useState([]);\r\n    const [countData, setCountData] = useState();\r\n    const [tableData, setTableData] = useState([]);\r\n    const [storeId, setStoreId] = useState(\"\");\r\n    const [subCollectionData, setSubCollectionData] = useState([])\r\n    const [collectionData, setCollectionData] = useState([])\r\n\r\n    const getStats = async() =>{\r\n        try{\r\n            const response = await axios.get(`${baseURL}/api/usersubscription/stats`)\r\n            //console.log(response)\r\n            setCountData(response.data.data)\r\n        }catch(error){\r\n            console.error(error);\r\n        }\r\n    }\r\n    const getTableData = async() => {\r\n        try {\r\n            const response = await axios.get(`${baseURL}/api/usersubscription/admin`)\r\n            //console.log(response)\r\n            setTableData(response?.data?.data)\r\n        }catch(error){console.error(error)}\r\n    }\r\n    useEffect(() => {\r\n        getStats(); // Call the function inside useEffect\r\n        getTableData(); // Call the function inside useEffect\r\n    }, []); \r\n    return (\r\n        <>\r\n            <Fragment>\r\n                <Container fluid={true}>\r\n                    <div className='page-title'>\r\n                        <Row>\r\n                            <Col xs='6'>\r\n                                <H3>Subscription Report</H3>\r\n                            </Col>\r\n                            \r\n                        </Row>\r\n                    </div>\r\n                    <Row>\r\n                        <Col sm=\"12\">\r\n                            <Card>\r\n                                <CardBody className=\"p-0 py-4\">\r\n                                    <div className=\"px-4 d-flex align-items-center justify-between\">\r\n                                      \r\n                                    </div>\r\n\r\n                                    <ReportsCountCard data={countData} />\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col sm=\"12\">\r\n                            <Card>\r\n                                <CardBody style={{ padding: \"15px\" }}>\r\n                                   <OrdersTable orderData={tableData} />\r\n                                    \r\n                                   \r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Fragment>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReportsComponent;\r\n/* <Col xs='6'>\r\n                                <div className='d-flex justify-content-end'>\r\n                                    <Nav tabs className=\"product_variant_tabs\">\r\n                                        <NavItem>\r\n                                            <NavLink\r\n                                                className={activeTab === 'orders' ? \"active\" : \"\"}\r\n                                                onClick={() => handleTab('orders')}\r\n                                            >\r\n                                                Orders\r\n                                            </NavLink>\r\n                                        </NavItem>\r\n                                        <NavItem>\r\n                                            <NavLink\r\n                                                className={activeTab === 'sells' ? \"active\" : \"\"}\r\n                                                onClick={() => handleTab('sells')}\r\n                                            >\r\n                                                Sells\r\n                                            </NavLink>\r\n                                        </NavItem>\r\n                                         <NavItem>\r\n                                            <NavLink\r\n                                                className={activeTab === 'products' ? \"active\" : \"\"}\r\n                                                onClick={() => handleTab('products')}\r\n                                            >\r\n                                                Products\r\n                                            </NavLink>\r\n                                        </NavItem> \r\n                                    </Nav>\r\n                                </div>\r\n                            </Col> */\r\n  // const userRoles = JSON.parse(localStorage.getItem(\"role_name\"));\r\n\r\n    // const handleTab = (step) => {\r\n    //     setActiveTab(step);\r\n    // };\r\n\r\n    // const onChange = (dates) => {\r\n    //     const [start, end] = dates;\r\n    //     setStartDate(start);\r\n    //     setEndDate(end);\r\n    //     setFilterDateTab(null);\r\n    // };\r\n\r\n    // const fetchStores = async () => {\r\n    //     const token = await JSON.parse(localStorage.getItem(\"token\"));\r\n    //     try {\r\n    //         const stores = await axios.get(`${baseURL}/api/store/get-all-stores`, {\r\n    //             headers: {\r\n    //                 Authorization: `${token}`,\r\n    //             },\r\n    //         });\r\n    //         let filteredData = stores?.data?.data.filter((item) => item.status === \"active\");\r\n    //         setStoreData(filteredData || []);\r\n    //     } catch (error) {\r\n    //         //console.log(error);\r\n    //     }\r\n    // };\r\n\r\n    // const getCount = async () => {\r\n    //     const token = await JSON.parse(localStorage.getItem(\"token\"));\r\n    //     const userData = await JSON.parse(localStorage.getItem('UserData'))\r\n\r\n    //     try {\r\n\r\n    //         let params = {};\r\n    //         let url = \"\";\r\n\r\n    //         switch (filterDateTab) {\r\n    //             case 1: // Today\r\n    //                 params.start_date = moment().startOf('day').format('YYYY-MM-DD');\r\n    //                 params.end_date = moment().endOf('day').format('YYYY-MM-DD');\r\n    //                 break;\r\n    //             case 2: // Weekly\r\n    //                 params.start_date = moment().startOf('week').format('YYYY-MM-DD');\r\n    //                 params.end_date = moment().endOf('week').format('YYYY-MM-DD');\r\n    //                 break;\r\n    //             case 3: // Monthly\r\n    //                 params.start_date = moment().startOf('month').format('YYYY-MM-DD');\r\n    //                 params.end_date = moment().endOf('month').format('YYYY-MM-DD');\r\n    //                 break;\r\n    //             default:\r\n    //                 break;\r\n    //         }\r\n\r\n    //         if (startDate && endDate) {\r\n    //             params.start_date = moment(startDate).format('YYYY-MM-DD');\r\n    //             params.end_date = moment(endDate).format('YYYY-MM-DD');\r\n    //         }\r\n\r\n    //         if (activeTab === \"orders\") {\r\n    //             url = `${orderURL}/get-orders-report-count`;\r\n    //             if (storeId) {\r\n    //                 params.store_id = storeId;\r\n    //             }\r\n    //         }\r\n    //         if (activeTab === \"sells\") {\r\n    //             url = `${baseURL}/api/order/get-all-category-sells-count`;\r\n    //             params.store_id = undefined\r\n\r\n    //         }\r\n\r\n    //         const userRole = JSON.parse(localStorage.getItem(\"role_name\"));\r\n\r\n    //         if (userRole !== 'admin') {\r\n    //             params.store_id = userData?._id\r\n    //         }\r\n\r\n    //         await axios.get(`${url}`, {\r\n    //             params: params,\r\n    //             headers: {\r\n    //                 Authorization: `${token}`,\r\n    //             }\r\n    //         }).then((res) => {\r\n    //             if (res && res.status === 200) {\r\n    //                 setCountData(res?.data?.data);\r\n    //             }\r\n    //         })\r\n    //     }\r\n    //     catch (error) {\r\n    //         //console.log()\r\n    //     }\r\n    // }\r\n\r\n    // const getData = async () => {\r\n    //     // setIsLoading(true);\r\n\r\n    //     try {\r\n    //         const token = await JSON.parse(localStorage.getItem(\"token\"));\r\n    //         const userData = await JSON.parse(localStorage.getItem('UserData'))\r\n\r\n    //         let url;\r\n    //         let params = {};\r\n\r\n    //         if (activeTab === \"orders\") {\r\n    //             url = `${orderURL}/get-all-report-orders`;\r\n    //             if (storeId) {\r\n    //                 params.store_id = storeId;\r\n    //             }\r\n    //         }\r\n\r\n    //         if (activeTab === \"sells\") {\r\n    //             url = `${baseURL}/api/order/get-all-sells-variants`;\r\n    //             params.store_id = undefined\r\n    //         }\r\n\r\n    //         const userRole = JSON.parse(localStorage.getItem(\"role_name\"));\r\n\r\n    //         if (userRole !== 'admin') {\r\n    //             params.store_id = userData?._id\r\n    //         }\r\n            \r\n    //         switch (filterDateTab) {\r\n    //             case 1: // Today\r\n    //                 params.start_date = moment().startOf('day').format('YYYY-MM-DD');\r\n    //                 params.end_date = moment().endOf('day').format('YYYY-MM-DD');\r\n    //                 break;\r\n    //             case 2: // Weekly\r\n    //                 params.start_date = moment().startOf('week').format('YYYY-MM-DD');\r\n    //                 params.end_date = moment().endOf('week').format('YYYY-MM-DD');\r\n    //                 break;\r\n    //             case 3: // Monthly\r\n    //                 params.start_date = moment().startOf('month').format('YYYY-MM-DD');\r\n    //                 params.end_date = moment().endOf('month').format('YYYY-MM-DD');\r\n    //                 break;\r\n    //             default:\r\n    //                 break;\r\n    //         }\r\n\r\n    //         if (startDate && endDate) {\r\n    //             params.start_date = moment(startDate).format('YYYY-MM-DD');\r\n    //             params.end_date = moment(endDate).format('YYYY-MM-DD');\r\n    //         }\r\n\r\n    //         axios.get(`${url}`, {\r\n    //             params: params,\r\n    //             headers: {\r\n    //                 Authorization: `${token}`\r\n    //             }\r\n    //         })\r\n    //             .then((res) => {\r\n    //                 if (res?.data?.success && res) {\r\n    //                     //console.log(res?.data?.data);\r\n    //                     setTableData(res?.data?.data);\r\n    //                 }\r\n    //             });\r\n    //     } catch (error) {\r\n    //         // setIsLoading(false);\r\n    //         console.error(error);\r\n    //     }\r\n    // };\r\n\r\n    // const fetchCategoryList = async () => {\r\n    //     const token = await JSON.parse(localStorage.getItem(\"token\"))\r\n    //     try {\r\n    //         const collectData = await axios.get(`${baseURL}/api/admin/get-collections?page=1&limit=1000`, {\r\n    //             headers: {\r\n    //                 Authorization: `${token}`,\r\n    //             }\r\n    //         });\r\n    //         let data = collectData?.data?.data.filter((item) => item.status === \"active\")\r\n    //         setCollectionData(data)\r\n    //     } catch (error) {\r\n    //         //console.log(error)\r\n    //     }\r\n    // }\r\n\r\n    // const fetchSubcollectionsList = async () => {\r\n    //     const token = await JSON.parse(localStorage.getItem(\"token\"))\r\n    //     let limit = 1000;\r\n    //     try {\r\n    //         const response = await axios.get(`${baseURL}/api/admin/get-sub-collections?page=1&limit=${limit}`, {\r\n    //             headers: {\r\n    //                 Authorization: `${token}`\r\n    //             }\r\n    //         })\r\n    //         let data = response?.data?.data.filter((item) => item.status === \"active\");\r\n    //         setSubCollectionData(data);\r\n\r\n    //     } catch (error) {\r\n    //         //console.log(error)\r\n    //     }\r\n    // }\r\n\r\n    // const downloadExcel = () => {\r\n    //     if (activeTab === \"orders\") {\r\n    //         exportToExcel(tableData, 'Orders_Report', 'orders');\r\n    //     }\r\n    //     if (activeTab === \"sells\") {\r\n    //         exportToExcel(tableData, 'Sells_Report', 'sells');\r\n    //     }\r\n    // }\r\n\r\n    // useEffect(() => {\r\n    //     fetchStores();\r\n    //     fetchCategoryList();\r\n    //     fetchSubcollectionsList();\r\n    // }, []);\r\n\r\n    // useEffect(() => {\r\n    //     getData();\r\n    //     getCount();\r\n    // }, [storeId, startDate, endDate, filterDateTab, activeTab]);\r\n  /* <Nav tabs className=\"product_variant_tabs mb-3\">\r\n                                            <NavItem>\r\n                                                <NavLink\r\n                                                    className={filterDateTab === 1 ? \"active\" : \"\"}\r\n                                                    onClick={() => {\r\n                                                        setStartDate(null);\r\n                                                        setEndDate(null);\r\n                                                        setFilterDateTab(1)\r\n                                                    }}\r\n                                                >\r\n                                                    Today\r\n                                                </NavLink>\r\n                                            </NavItem>\r\n                                            <NavItem>\r\n                                                <NavLink\r\n                                                    className={filterDateTab === 2 ? \"active\" : \"\"}\r\n                                                    onClick={() => {\r\n                                                        setStartDate(null);\r\n                                                        setEndDate(null);\r\n                                                        setFilterDateTab(2)\r\n                                                    }}\r\n                                                >\r\n                                                    Weekly\r\n                                                </NavLink>\r\n                                            </NavItem>\r\n                                            <NavItem>\r\n                                                <NavLink\r\n                                                    className={filterDateTab === 3 ? \"active\" : \"\"}\r\n                                                    onClick={() => {\r\n                                                        setStartDate(null);\r\n                                                        setEndDate(null);\r\n                                                        setFilterDateTab(3);\r\n                                                    }}\r\n                                                >\r\n                                                    Monthly\r\n                                                </NavLink>\r\n                                            </NavItem>\r\n                                        </Nav> */\r\n                                        /* <div className='d-flex align-items-center file-content file-content-dash'>\r\n\r\n                                            {\r\n                                                userRoles !== 'admin' ? (<></>) : (activeTab === \"orders\" &&\r\n                                                    <Input type='select' onChange={(e) => setStoreId(e.target.value)} >\r\n                                                        <option value=''>All Stores</option>\r\n                                                        {storeData && storeData.length > 0 && storeData.map((data) => (\r\n                                                            <option key={data._id} value={data._id}>{data.storeName}</option>\r\n                                                        ))}\r\n                                                    </Input>)\r\n                                            }\r\n                                            <DatePicker className=\"datepickerr form-control digits mx-2\"\r\n                                                onChange={onChange}\r\n                                                startDate={startDate}\r\n                                                endDate={endDate}\r\n                                                selectsRange\r\n                                                showIcon\r\n                                                placeholderText='Select Date'\r\n                                            />\r\n                                            <button type='button' \r\n                                            // onClick={() => downloadExcel()}\r\n                                                className='btn btn-secondary d-flex upload_label'>\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"18\" viewBox=\"0 0 14 18\" fill=\"none\">\r\n                                                    <path d=\"M9.33882 8.82071L9.33871 8.82059L9.32968 8.82962L8.125 10.0341V5.75L11.687 5.75C11.6871 5.75 11.6872 5.75 11.6874 5.75C12.1348 5.75058 12.5637 5.92857 12.8801 6.24494C13.1965 6.56141 13.3745 6.99049 13.375 7.43803V15.562C13.3745 16.0095 13.1965 16.4386 12.8801 16.7551C12.5636 17.0715 12.1345 17.2495 11.687 17.25H2.31303C1.86549 17.2495 1.43641 17.0715 1.11994 16.7551C0.803539 16.4387 0.625547 16.0097 0.625 15.5622V7.43778C0.625547 6.99032 0.80354 6.56135 1.11994 6.24494C1.43631 5.92857 1.86523 5.75058 2.31263 5.75C2.31277 5.75 2.3129 5.75 2.31303 5.75L5.875 5.75V10.0341L4.67032 8.82962L4.67043 8.8295L4.66118 8.82071C4.44849 8.61864 4.16527 8.50765 3.87192 8.51141C3.57855 8.51516 3.29827 8.63337 3.09082 8.84082C2.88337 9.04827 2.76516 9.32856 2.76141 9.62191C2.75765 9.91527 2.86864 10.1985 3.07071 10.4112L3.07059 10.4113L3.07965 10.4204L6.20465 13.5454L6.20477 13.5455C6.41572 13.7563 6.70176 13.8747 7 13.8747C7.29824 13.8747 7.58428 13.7563 7.79523 13.5455L7.79535 13.5454L10.9204 10.4204L10.9205 10.4205L10.9293 10.4112C11.1314 10.1985 11.2423 9.91527 11.2386 9.62191C11.2348 9.32855 11.1166 9.04827 10.9092 8.84082C10.7017 8.63337 10.4214 8.51516 10.1281 8.51141C9.83473 8.50765 9.55151 8.61864 9.33882 8.82071ZM7.08839 0.786612C7.11183 0.810053 7.125 0.841847 7.125 0.875V4.75H6.875V0.875C6.875 0.841849 6.88817 0.810054 6.91161 0.786612C6.93505 0.763169 6.96685 0.75 7 0.75C7.03315 0.75 7.06495 0.76317 7.08839 0.786612Z\" fill=\"white\" stroke=\"white\" />\r\n                                                </svg> Export Excel\r\n                                            </button>\r\n                                        </div> */","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n"],"names":["_ref","_data$totalAmount","data","_jsx","className","children","_jsxs","Row","Col","sm","xl","md","Card","CardBody","style","padding","H6","attrH6","xmlns","width","height","viewBox","fill","d","H3","attrH3","totalSubscriptions","totalAmount","toFixed","activeSubscriptions","orderData","useNavigate","console","log","isLoading","setIsLoading","useState","searchTerm","setSearchTerm","searchText","setSearchText","debouncedSearch","React","debounce","async","current","orderColumns","name","selector","row","sortable","center","cell","_id","_row$userId","userId","_row$userId2","concat","startDate","moment","format","_row$subscriptionPlan","subscriptionPlanId","duration","_row$subscriptionPlan2","_row$subscriptionPlan3","_row$subscriptionPlan4","_row$subscriptionPlan5","price","_row$subscriptionPlan6","status","Fragment","xxl","lg","H5","attrH5","value","onChange","e","handleSearch","event","target","type","placeholder","DataTable","columns","progressPending","progressComponent","Loader","activeTab","setActiveTab","filterDateTab","setFilterDateTab","setStartDate","endDate","setEndDate","storeData","setStoreData","countData","setCountData","tableData","setTableData","storeId","setStoreId","subCollectionData","setSubCollectionData","collectionData","setCollectionData","useEffect","response","axios","get","baseURL","error","getStats","_response$data","getTableData","_Fragment","Container","fluid","xs","ReportsCountCard","OrdersTable","b","a","autoBom","warn","test","Blob","c","XMLHttpRequest","open","responseType","onload","g","onerror","send","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","window","f","self","global","navigator","userAgent","saveAs","HTMLAnchorElement","prototype","h","i","URL","webkitURL","j","createElement","download","rel","href","origin","location","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","title","body","innerText","HTMLElement","safari","FileReader","k","onloadend","result","replace","readAsDataURL","l","m","module","exports"],"sourceRoot":""}